//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceLibrary.Models
{
    using System.Runtime.Serialization;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Client", Namespace = "http://schemas.datacontract.org/2004/07/WcfServiceLibrary.Models")]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string NameField;

        private System.DateTime TimeField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time
        {
            get
            {
                return this.TimeField;
            }
            set
            {
                this.TimeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Message", Namespace = "http://schemas.datacontract.org/2004/07/WcfServiceLibrary.Models")]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string ContentField;

        private string SenderField;

        private System.DateTime TimeField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content
        {
            get
            {
                return this.ContentField;
            }
            set
            {
                this.ContentField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender
        {
            get
            {
                return this.SenderField;
            }
            set
            {
                this.SenderField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time
        {
            get
            {
                return this.TimeField;
            }
            set
            {
                this.TimeField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IChat", CallbackContract = typeof(IChatCallback))]
public interface IChat
{

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChat/Connect", ReplyAction = "http://tempuri.org/IChat/ConnectResponse")]
    bool Connect(WcfServiceLibrary.Models.Client client);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChat/Connect", ReplyAction = "http://tempuri.org/IChat/ConnectResponse")]
    System.Threading.Tasks.Task<bool> ConnectAsync(WcfServiceLibrary.Models.Client client);

    [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChat/Say")]
    void Say(WcfServiceLibrary.Models.Message msg);

    [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChat/Say")]
    System.Threading.Tasks.Task SayAsync(WcfServiceLibrary.Models.Message msg);

    [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChat/Whisper")]
    void Whisper(WcfServiceLibrary.Models.Message msg, WcfServiceLibrary.Models.Client receiver);

    [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChat/Whisper")]
    System.Threading.Tasks.Task WhisperAsync(WcfServiceLibrary.Models.Message msg, WcfServiceLibrary.Models.Client receiver);

    [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChat/IsWriting")]
    void IsWriting(WcfServiceLibrary.Models.Client client);

    [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChat/IsWriting")]
    System.Threading.Tasks.Task IsWritingAsync(WcfServiceLibrary.Models.Client client);

    [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChat/Disconnect")]
    void Disconnect(WcfServiceLibrary.Models.Client client);

    [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChat/Disconnect")]
    System.Threading.Tasks.Task DisconnectAsync(WcfServiceLibrary.Models.Client client);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IChatCallback
{

    [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChat/RefreshClients")]
    void RefreshClients(WcfServiceLibrary.Models.Client[] clients);

    [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChat/Receive")]
    void Receive(WcfServiceLibrary.Models.Message msg);

    [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChat/ReceiveWhisper")]
    void ReceiveWhisper(WcfServiceLibrary.Models.Message msg, WcfServiceLibrary.Models.Client receiver);

    [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChat/IsWritingCallback")]
    void IsWritingCallback(WcfServiceLibrary.Models.Client client);

    [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChat/UserJoin")]
    void UserJoin(WcfServiceLibrary.Models.Client client);

    [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChat/UserLeave")]
    void UserLeave(WcfServiceLibrary.Models.Client client);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IChatChannel : IChat, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ChatClient : System.ServiceModel.DuplexClientBase<IChat>, IChat
{

    public ChatClient(System.ServiceModel.InstanceContext callbackInstance) :
            base(callbackInstance)
    {
    }

    public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) :
            base(callbackInstance, endpointConfigurationName)
    {
    }

    public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) :
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }

    public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }

    public ChatClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(callbackInstance, binding, remoteAddress)
    {
    }

    public bool Connect(WcfServiceLibrary.Models.Client client)
    {
        return base.Channel.Connect(client);
    }

    public System.Threading.Tasks.Task<bool> ConnectAsync(WcfServiceLibrary.Models.Client client)
    {
        return base.Channel.ConnectAsync(client);
    }

    public void Say(WcfServiceLibrary.Models.Message msg)
    {
        base.Channel.Say(msg);
    }

    public System.Threading.Tasks.Task SayAsync(WcfServiceLibrary.Models.Message msg)
    {
        return base.Channel.SayAsync(msg);
    }

    public void Whisper(WcfServiceLibrary.Models.Message msg, WcfServiceLibrary.Models.Client receiver)
    {
        base.Channel.Whisper(msg, receiver);
    }

    public System.Threading.Tasks.Task WhisperAsync(WcfServiceLibrary.Models.Message msg, WcfServiceLibrary.Models.Client receiver)
    {
        return base.Channel.WhisperAsync(msg, receiver);
    }

    public void IsWriting(WcfServiceLibrary.Models.Client client)
    {
        base.Channel.IsWriting(client);
    }

    public System.Threading.Tasks.Task IsWritingAsync(WcfServiceLibrary.Models.Client client)
    {
        return base.Channel.IsWritingAsync(client);
    }

    public void Disconnect(WcfServiceLibrary.Models.Client client)
    {
        base.Channel.Disconnect(client);
    }

    public System.Threading.Tasks.Task DisconnectAsync(WcfServiceLibrary.Models.Client client)
    {
        return base.Channel.DisconnectAsync(client);
    }
}
